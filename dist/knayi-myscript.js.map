{"version":3,"sources":["webpack://knayi/webpack/bootstrap","webpack://knayi/./library/globalOptions.js","webpack://knayi/./library/detector.js","webpack://knayi/./library/spellingCheck.js","webpack://knayi/./library/syllBreak.js","webpack://knayi/./main.js","webpack://knayi/./node_modules/myanmar-tools/index.js","webpack://knayi/./node_modules/myanmar-tools/build_node/zawgyi_detector.js","webpack://knayi/./node_modules/buffer/index.js","webpack://knayi/(webpack)/buildin/global.js","webpack://knayi/./node_modules/base64-js/index.js","webpack://knayi/./node_modules/ieee754/index.js","webpack://knayi/./node_modules/isarray/index.js","webpack://knayi/./node_modules/myanmar-tools/build_node/zawgyi_converter.js","webpack://knayi/./library/converter.js","webpack://knayi/./library/truncate.js","webpack://knayi/./library/normalization.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","OPTIONS","silent_mode","detector","use_myanmartools","myanmartools_zg_threshold","_ref","arguments","length","undefined","_ref$use_myanmartools","_ref$myanmartools_zg_","console","error","isSilentMode","setOptions","options","keys","indexOf","library","mmCharacterRange","myanmartoolZawgyiDetector","require","ZawgyiDetector","globalOptions","detect","unicode","zawgyi","whitespace","forEach","type","RegExp","content","fallback_font_type","warn","test","trim","replace","myanmartools_zg_probability","getZawgyiProbability","match","rule","fontDetect","spellingFix","split","sys","map","exp","concat","fontType","syllable","breakpoint","lib","fontConvert","syllBreak","truncate","normalize","version","setGlobalOptions","ZawgyiConverter","Buffer","getArrayBuffer","STD_CP0","STD_CP1","AFT_CP0","AFT_CP1","EXA_CP0","EXA_CP1","EXB_CP0","EXB_CP1","SPC_CP0","SPC_CP1","STD_OFFSET","AFT_OFFSET","EXA_OFFSET","EXB_OFFSET","SPC_OFFSET","SSV_STD_EXA_EXB_SPC","getIndexForCodePoint","cp","ssv","checkMagicNumberAndVersion","stream","offset","expectedBinaryTagLead","expectedBinaryTagTrail","expectedBinaryVersion","binaryTagLead","getUint32","Error","toString","binaryTagTrail","binaryVersion","nodeBuffer","arrayBuffer","ArrayBuffer","u8view","Uint8Array","BinaryMarkov","BINARY_TAG_LEAD","BINARY_TAG_TRAIL","BINARY_VERSION","size","getInt16","logProbabilityDifferences","i1","entries","fallback","getFloat32","next","i2","this","getLogProbabilityDifference","ZawgyiUnicodeMarkovModel","classifier","predict","input","prevState","totalDelta","seenTransition","currState","charCodeAt","Math","Number","NEGATIVE_INFINITY","model","DataView","global","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","max","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","runPhase","rules","inString","outString","midString","startOfString","foundRule","_i","rules_1","matchOnStart","rightPartSize","newStart","revisit","substring","runAllPhases","allRules","allRules_1","zawgyiToUnicode","unicodeToZawgyi","normalizeZawgyi","fontTypes","uni","zaw","to","debug_logs","matched_patterns","steps","refLib","convert","oneTime","rule1","debug","asLongAsMatch","rule2","debugging","param1","param2","param3","omission","absoulteLength","reduce","curr","syll","left","_curr","word","removeSpace","M","V","A","F","E","brakePoint","brakePointRegex","extendedRules","postExtendedRules","addReplacementRule","rulesset","_ref2","_slicedToArray","pattern","replacement","SPACE_IN_FRONT_OF_VIRAMA","rankingMap","ျ","ြ","ွ","ှ","ေ","ါ","ာ","ိ","ီ","ု","ူ","ဲ","်","ံ","့","း","applyReplacementRules","result","g1","g2","chunk","_toConsumableArray","Set","sort","v"],"mappings":"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","file":"knayi-myscript.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","var OPTIONS = {\n  silent_mode: false,\n  detector: {\n    use_myanmartools: false,\n    myanmartools_zg_threshold: [0.05, 0.95]\n  }\n}\n// options\n\n/**\n * set configuartion of using googlei18n/myanmar-tools\n */\nfunction detector ({\n  use_myanmartools = OPTIONS.detector.use_myanmartools,\n  myanmartools_zg_threshold = [0.05, 0.95]\n} = {}) {\n  // Check types\n  if (\n    typeof myanmartools_zg_threshold[0] !== 'number'\n    || typeof myanmartools_zg_threshold[1] !== 'number'\n  ) {\n    console.error('myanmartools_zg_threshold must be [number, number]')\n    myanmartools_zg_threshold = OPTIONS.detector.myanmartools_zg_threshold\n  }\n\n  return {\n    use_myanmartools: use_myanmartools,\n    myanmartools_zg_threshold: myanmartools_zg_threshold\n  }\n}\n\nfunction setOptions (options = {}) {\n  if (Object.keys(options).indexOf('silent_mode') !== -1) {\n    OPTIONS.silent_mode = options.silent_mode;\n  }\n\n  if (Object.keys(options).indexOf('detector') !== -1) {\n    OPTIONS.detector = detector(options.detector);\n  }\n}\n\nmodule.exports = {\n  isSilentMode: () => { return OPTIONS.silent_mode },\n  setOptions,\n  detector\n}\n","const library = {};\nconst mmCharacterRange = /[\\u1000-\\u109F]/;\nconst whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]';\n\nconst myanmartools = require('myanmar-tools');\nconst myanmartoolZawgyiDetector = new myanmartools.ZawgyiDetector();\nconst globalOptions = require('./globalOptions');\n\n/** DETECTION Libarary **/\nlibrary.detect = {\n  unicode: [\n    '\\u103e', '\\u103f', '\\u100a\\u103a', '\\u1014\\u103a', '\\u1004\\u103a', '\\u1031\\u1038', '\\u1031\\u102c',\n    '\\u103a\\u1038', '\\u1035', '[\\u1050-\\u1059]', '^([\\u1000-\\u1021]\\u103c|[\\u1000-\\u1021]\\u1031)'\n  ],\n  zawgyi : [\n    '\\u102c\\u1039', '\\u103a\\u102c', whitespace+'(\\u103b|\\u1031|[\\u107e-\\u1084])[\\u1000-\\u1021]'\n    ,'^(\\u103b|\\u1031|[\\u107e-\\u1084])[\\u1000-\\u1021]', '[\\u1000-\\u1021]\\u1039[^\\u1000-\\u1021]', '\\u1025\\u1039'\n    ,'\\u1039\\u1038' ,'[\\u102b-\\u1030\\u1031\\u103a\\u1038](\\u103b|[\\u107e-\\u1084])[\\u1000-\\u1021]' ,'\\u1036\\u102f'\n    ,'[\\u1000-\\u1021]\\u1039\\u1031' , '\\u1064','\\u1039'+whitespace, '\\u102c\\u1031'\n    ,'[\\u102b-\\u1030\\u103a\\u1038]\\u1031[\\u1000-\\u1021]', '\\u1031\\u1031', '\\u102f\\u102d', '\\u1039$'\n  ]\n};\n\n// Populate Detect library as Regex\nObject.keys(library.detect).forEach((type) => {\n  for (var i = 0; i < library.detect[type].length; i++) {\n    library.detect[type][i] = new RegExp(library.detect[type][i], 'g');\n  }\n});\n\n/**\n * Font Type Detector agent\n * @param content Text to make a detection\n * @param def Default return format;\n * @return unicode ? zawgyi\n */\nfunction fontDetect(content, fallback_font_type, options = {}){\n  if (!content) {\n    if (!globalOptions.isSilentMode()) console.warn('Content must be specified on knayi.fontDetect.');\n    return fallback_font_type || 'en';\n  }\n\n\tif (content === '')\n\t\treturn content;\n\n\tif (!mmCharacterRange.test(content))\n\t\treturn fallback_font_type || 'en';\n\n\tcontent = content.trim().replace(/\\u200B/g, '');\n\tfallback_font_type = fallback_font_type || 'zawgyi';\n\n  options = globalOptions.detector(options);\n\n  if (options.use_myanmartools) {\n    var myanmartools_zg_probability = myanmartoolZawgyiDetector.getZawgyiProbability(content);\n\n    if (myanmartools_zg_probability < options.myanmartools_zg_threshold[0]) {\n  \t\treturn 'unicode';\n  \t} else if (myanmartools_zg_probability > options.myanmartools_zg_threshold[1]) {\n  \t\treturn 'zawgyi';\n  \t} else {\n  \t\treturn fallback_font_type;\n  \t}\n\n  } else {\n    var match = {};\n\n    for (var type in library.detect) {\n  \t\tmatch[type] = 0;\n\n  \t\tfor (var i = 0; i < library.detect[type].length; i++) {\n  \t\t\tvar rule = library.detect[type][i]\n  \t\t\tvar m = content.match(rule);\n  \t\t\tmatch[type] += (m && m.length) || 0;\n  \t\t}\n  \t}\n\n    if (match.unicode > match.zawgyi) {\n  \t\treturn 'unicode';\n  \t} else if (match.unicode < match.zawgyi) {\n  \t\treturn 'zawgyi';\n  \t} else {\n  \t\treturn fallback_font_type;\n  \t}\n\n  }\n};\n\nmodule.exports = fontDetect\n","const fontDetect = require('./detector');\nconst globalOptions = require('./globalOptions');\n\nconst mmCharacterRange = /[\\u1000-\\u109F]/;\nconst library = {};\n\n/** Spelling Check Libarary **/\nlibrary.spellingFix = {\n  unicode: \"\\u102b \\u102c \\u102d \\u102e \\u102f \\u1030 \\u1031 \\u1032 \\u1036 \\u1037 \\u1038 \\u103a \\u103b \\u103c \\u103d \\u103e \\u1039\".split(\" \"),\n  zawgyi: \"\\u102b \\u102c \\u102d \\u102e \\u102f \\u1030 \\u1031 \\u1032 \\u1033 \\u1034 \\u1036 \\u1037 \\u1038 \\u1039 \\u103a \\u103b \\u103c \\u103d \\u105a \\u1060 \\u1061 \\u1062 \\u1063 \\u1064 \\u1065 \\u1066 \\u1067 \\u1068 \\u1069 \\u106a \\u106b \\u106c \\u106d \\u1070 \\u1071 \\u1072 \\u1073 \\u1074 \\u1075 \\u1076 \\u1077 \\u1078 \\u1079 \\u107a \\u107b \\u107c \\u107d \\u107e \\u107f \\u1080 \\u1081 \\u1082 \\u1083 \\u1084 \\u1085 \\u1087 \\u1088 \\u1089 \\u108a \\u108b \\u108c \\u108d \\u108e \\u1093 \\u1094 \\u1095 \\u1096\".split(\" \")\n};\n\n// Populate Spelling Check\nObject.keys(library.spellingFix).forEach((sys) =>{\n\tlibrary.spellingFix[sys] = library.spellingFix[sys].map(exp=>{\n\t  return [new RegExp(`[${exp}]{2,}`, 'g'), exp];\n\t})\n})\n\n/**\n* Spelling Check agent\n* @param content Text to process\n* @param fontType Type of font of content\n* @return edited text\n*/\nfunction spellingFix(content, fontType){\n  if (!content) {\n    if (!globalOptions.isSilentMode()) console.warn('Content must be specified on knayi.spellingFix.');\n    return '';\n  }\n\n\tif (content === '' || !mmCharacterRange.test(content))\n\t\treturn content;\n\n\tif (!fontType)\n\t\tfontType = fontDetect(content);\n\n\tcontent = content.trim().replace(/\\u200B/g, '');\n\n\tswitch (fontType) {\n\t\tcase 'zawgyi':\n\t\t\tfor (var i = 0; i < library.spellingFix.zawgyi.length; i++) {\n\t\t\t\tvar rule = library.spellingFix.zawgyi[i];\n\t\t\t\tcontent = content.replace(rule[0], rule[1]);\n\t\t\t}\n\t\t\treturn content;\n\t\tcase 'unicode':\n\t\tdefault:\n\t\t\tfor (var i = 0; i < library.spellingFix.unicode.length; i++) {\n\t\t\t\tvar rule = library.spellingFix.unicode[i];\n\t\t\t\tcontent = content.replace(rule[0], rule[1]);\n\t\t\t}\n\t\t\treturn content;\n\t}\n};\n\nmodule.exports = spellingFix;\n","const fontDetect = require('./detector');\nconst globalOptions = require('./globalOptions');\n\nconst mmCharacterRange = /[\\u1000-\\u109F]/;\nconst library = {};\n\n/** Syllable Libarary **/\nlibrary.syllable = {\n  zawgyi: [\n    [/([\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102a\\u104c-\\u104f\\u1086\\u108f-\\u1092])/g, '\\u200B$1'],\n    [/([\\u1031][\\u103b\\u107e-\\u1084]|[\\u1031\\u103b\\u107e-\\u1084])/g, '\\u200B$1'],\n    [/([\\u1031\\u103b\\u107e-\\u1084])\\u200B([\\u1000-\\u1021\\u1025\\u1029\\u106A\\u106B\\u1086\\u108F\\u1090])/g, '$1$2'],\n    [/([\\u0009-\\u000d\\u0020\\u00a0\\u2000-\\u200a\\u2028\\u2029\\u202f]|>|\\u201C|\\u2018|\\-|\\(|\\[|{|[\\u2012-\\u2014])\\u200B([\\u1000-\\u1021\\u1031\\u103b\\u1025\\u1029\\u106A\\u106B\\u107e-\\u1084\\u1086\\u108F\\u1090])/g, '$1$2'],\n    [/\\u200B([\\u1000-\\u1021\\u1025\\u1029\\u106A\\u106B\\u1086\\u108F\\u1090]\\u1039)/g, '$1'],\n    [/(\\s|\\n)\\u200B([\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102a\\u104c-\\u104f\\u1086\\u108f-\\u1092])/g, '$1$2'],\n    [/([\\u1000-\\u1021])\\u200B([\\u1000-\\u1021\\u1031\\u103b\\u107e-\\u1084])/g, '$1$2']\n  ],\n  unicode: [\n    [/(\\u103A)(\\u1037)/g, \"$2$1\"],\n    [/([\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102a\\u103f\\u104c-\\u104f])/g, \"\\u200B$1\"],\n    [/([\\u0009-\\u000d\\u0020\\u00a0\\u2000-\\u200a\\u2028\\u2029\\u202f]|>|\\u201C|\\u2018|\\-|\\(|\\[|{|[\\u2012-\\u2014]|\\u1039)\\u200B([\\u1000-\\u1021])/g, \"$1$2\"],\n    [/\\u200B(\\u1004\\u103A\\u1039\\u1037)/g, \"$1\"],\n    [/\\u200B([\\u1000-\\u1021]\\u103A)/g, \"$1\"],\n    [/(\\s|\\n)\\u200B([\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102a\\u103f\\u104c-\\u104f])/g, \"$1$2\"],\n    [/([\\u1000-\\u1021])\\u200B([\\u1000-\\u1021])/g, \"$1$2\"]\n  ]\n};\n\n/**\n* Syllable-Break agent\n* @param content Text content\n* @param language Language of content 'zawgyi' ? 'my'\n* @param breakpoint Default is '\\u200B'\n* @return edited text\n*/\nfunction syllBreak(content, fontType, breakpoint){\nif (!content) {\n    if (!globalOptions.isSilentMode()) console.warn('Content must be specified on knayi.syllBreak.');\n    return '';\n  }\n\n  if (content === '' || !mmCharacterRange.test(content))\n    return content;\n\n  content = content.trim().replace(/\\u200B/g, '');  \n\n  if (!fontType)\n    fontType = fontDetect(content);\n\n  var lib = library.syllable[fontType];\n\n  for (var i = 0; i < lib.length; i++) {\n    content = content.replace(lib[i][0], lib[i][1]);\n  };\n\n  content = content.replace(/^\\u200B/, '');\n\n  if (breakpoint && breakpoint !== '\\u200B')\n    return content.replace(/\\u200B/g, breakpoint);\n\n  return content\n};\n\nmodule.exports = syllBreak;\n","const globalOptions = require('./library/globalOptions');\nconst fontDetect = require('./library/detector');\nconst fontConvert = require('./library/converter');\nconst syllBreak = require('./library/syllBreak');\nconst spellingFix = require('./library/spellingCheck');\nconst truncate = require('./library/truncate');\nconst normalize = require('./library/normalization');\n\nconst {version} = require('./package.json');\n\nmodule.exports = {\n\tversion,\n\tsetGlobalOptions: globalOptions.setOptions,\n\tfontDetect,\n\tfontConvert,\n\tsyllBreak,\n\tspellingFix,\n\ttruncate,\n\tnormalize,\n};\n","/* Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n \"use strict\";\n\nmodule.exports = {\n    ZawgyiDetector: require(\"./build_node/zawgyi_detector\").ZawgyiDetector,\n    ZawgyiConverter: require(\"./build_node/zawgyi_converter\").ZawgyiConverter\n};\n","\"use strict\";\n/* Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DATA = \"\";\n// Standard Myanmar code point range before digits\nvar STD_CP0 = 0x1000;\nvar STD_CP1 = 0x103F;\n// Standard Myanmar code point range after digits\nvar AFT_CP0 = 0x104A;\nvar AFT_CP1 = 0x109F;\n// Extended Myanmar code point range A\nvar EXA_CP0 = 0xAA60;\nvar EXA_CP1 = 0xAA7F;\n// Extended Myanmar code point range B\nvar EXB_CP0 = 0xA9E0;\nvar EXB_CP1 = 0xA9FF;\n// Unicode space characters\nvar SPC_CP0 = 0x2000;\nvar SPC_CP1 = 0x200B;\n// Indices into Markov nodes\nvar STD_OFFSET = 1;\nvar AFT_OFFSET = STD_OFFSET + STD_CP1 - STD_CP0 + 1;\nvar EXA_OFFSET = AFT_OFFSET + AFT_CP1 - AFT_CP0 + 1;\nvar EXB_OFFSET = EXA_OFFSET + EXA_CP1 - EXA_CP0 + 1;\nvar SPC_OFFSET = EXB_OFFSET + EXB_CP1 - EXB_CP0 + 1;\nvar NUM_STATES = SPC_OFFSET + SPC_CP1 - SPC_CP0 + 1;\n/**\n * SSV: An ID representing which Unicode code points to include in the model:\n *\n * <p>SSV_STD_EXA_EXB_SPC - include Myanmar, Extended A, Extended B, and space-like\n * <p>STD_EXA_EXB - same as above but no space-like code points\n *\n * <p>\"SSV\" originally stands for State Set Version.\n */\nvar SSV_STD_EXA_EXB_SPC = 0;\nvar SSV_STD_EXA_EXB = 1;\nvar SSV_COUNT = 2;\n/**\n * Returns the index of the state in the Markov chain corresponding to the given code point.\n *\n * <p>Code points in the standard Myanmar range, Myanmar Extended A, Myanmar Extended B, and\n * Unicode Whitespace each have a unique state assigned to them. All other code points are mapped\n * to state 0.\n *\n * @param cp The code point to convert to a state index.\n * @return The index of the state in the Markov chain. 0 <= state < getSize()\n */\nfunction getIndexForCodePoint(cp, ssv) {\n    if (STD_CP0 <= cp && cp <= STD_CP1) {\n        return cp - STD_CP0 + STD_OFFSET;\n    }\n    if (AFT_CP0 <= cp && cp <= AFT_CP1) {\n        return cp - AFT_CP0 + AFT_OFFSET;\n    }\n    if (EXA_CP0 <= cp && cp <= EXA_CP1) {\n        return cp - EXA_CP0 + EXA_OFFSET;\n    }\n    if (EXB_CP0 <= cp && cp <= EXB_CP1) {\n        return cp - EXB_CP0 + EXB_OFFSET;\n    }\n    if (ssv == SSV_STD_EXA_EXB_SPC && SPC_CP0 <= cp && cp <= SPC_CP1) {\n        return cp - SPC_CP0 + SPC_OFFSET;\n    }\n    return 0;\n}\nfunction checkMagicNumberAndVersion(stream, offset, expectedBinaryTagLead, expectedBinaryTagTrail, expectedBinaryVersion) {\n    var binaryTagLead = stream.getUint32(offset);\n    offset += 4;\n    if (binaryTagLead !== expectedBinaryTagLead) {\n        throw new Error(\"Unexpected magic number lead; expected \"\n            + expectedBinaryTagLead.toString(16)\n            + \" but got \"\n            + binaryTagLead.toString(16));\n    }\n    var binaryTagTrail = stream.getUint32(offset);\n    offset += 4;\n    if (binaryTagTrail !== expectedBinaryTagTrail) {\n        throw new Error(\"Unexpected magic number trail; expected \"\n            + expectedBinaryTagTrail.toString(16)\n            + \" but got \"\n            + binaryTagTrail.toString(16));\n    }\n    // If expectedBinaryVersion is -1, don't check or consume it.\n    if (expectedBinaryVersion !== -1) {\n        var binaryVersion = stream.getUint32(offset);\n        offset += 4;\n        if (binaryVersion !== expectedBinaryVersion) {\n            throw new Error(\"Unexpected serial version number; expected \"\n                + expectedBinaryVersion.toString(16)\n                + \" but got \"\n                + binaryVersion.toString(16));\n        }\n    }\n    return offset;\n}\n// This is different on Node vs Browser.\nvar getArrayBuffer;\ngetArrayBuffer = function () {\n    // Buffer is defined on Node\n    // @ts-ignore\n    var nodeBuffer = new Buffer(DATA, \"base64\");\n    var arrayBuffer = new ArrayBuffer(nodeBuffer.length);\n    var u8view = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < nodeBuffer.length; i++) {\n        u8view[i] = nodeBuffer[i];\n    }\n    return arrayBuffer;\n};\nvar BinaryMarkov = /** @class */ (function () {\n    function BinaryMarkov(stream, offset) {\n        offset = checkMagicNumberAndVersion(stream, offset, BinaryMarkov.BINARY_TAG_LEAD, BinaryMarkov.BINARY_TAG_TRAIL, BinaryMarkov.BINARY_VERSION);\n        var size = stream.getInt16(offset);\n        offset += 2;\n        var logProbabilityDifferences = [];\n        for (var i1 = 0; i1 < size; i1++) {\n            logProbabilityDifferences[i1] = [];\n            var entries = stream.getInt16(offset);\n            offset += 2;\n            var fallback = void 0;\n            if (entries === 0) {\n                fallback = 0.0;\n            }\n            else {\n                fallback = stream.getFloat32(offset);\n                offset += 4;\n            }\n            var next = -1;\n            for (var i2 = 0; i2 < size; i2++) {\n                if (entries > 0 && next < i2) {\n                    next = stream.getInt16(offset);\n                    offset += 2;\n                    entries--;\n                }\n                if (next === i2) {\n                    logProbabilityDifferences[i1][i2] = stream.getFloat32(offset);\n                    offset += 4;\n                }\n                else {\n                    logProbabilityDifferences[i1][i2] = fallback;\n                }\n            }\n        }\n        this.logProbabilityDifferences = logProbabilityDifferences;\n    }\n    BinaryMarkov.prototype.getLogProbabilityDifference = function (i1, i2) {\n        return this.logProbabilityDifferences[i1][i2];\n    };\n    // JavaScript doesn't have the concept of 64-bit integers, so split the tag into two 32-bit ints.\n    BinaryMarkov.BINARY_TAG_LEAD = 0x424D4152;\n    BinaryMarkov.BINARY_TAG_TRAIL = 0x4B4F5620;\n    // Current serial format version number, used in association with the magic number.\n    BinaryMarkov.BINARY_VERSION = 0;\n    return BinaryMarkov;\n}());\nvar ZawgyiUnicodeMarkovModel = /** @class */ (function () {\n    function ZawgyiUnicodeMarkovModel(stream, offset) {\n        offset = checkMagicNumberAndVersion(stream, offset, ZawgyiUnicodeMarkovModel.BINARY_TAG_LEAD, ZawgyiUnicodeMarkovModel.BINARY_TAG_TRAIL, -1);\n        var binaryVersion = stream.getUint32(offset);\n        offset += 4;\n        if (binaryVersion === 1) {\n            // No SSV field\n            this.ssv = 0;\n        }\n        else if (binaryVersion === 2) {\n            this.ssv = stream.getUint32(offset);\n            offset += 4;\n        }\n        else {\n            throw new Error(\"Serial version: expected 1 or 2 but got \"\n                + binaryVersion.toString(16));\n        }\n        this.classifier = new BinaryMarkov(stream, offset);\n    }\n    ZawgyiUnicodeMarkovModel.prototype.predict = function (input) {\n        // Start at the base state\n        var prevState = 0;\n        var totalDelta = 0.0;\n        var seenTransition = false;\n        for (var offset = 0; offset <= input.length; offset++) {\n            var currState = void 0;\n            if (offset === input.length) {\n                currState = 0;\n            }\n            else {\n                // Note: All interesting characters are in the BMP.\n                var cp = input.charCodeAt(offset);\n                currState = getIndexForCodePoint(cp, this.ssv);\n            }\n            // Ignore 0-to-0 transitions\n            if (prevState !== 0 || currState !== 0) {\n                var delta = this.classifier.getLogProbabilityDifference(prevState, currState);\n                totalDelta += delta;\n                seenTransition = true;\n            }\n            prevState = currState;\n        }\n        // Special case: if there is no signal, return -Infinity,\n        // which will get interpreted by users as strong Unicode.\n        // This happens when the input string contains no Myanmar-range code points.\n        if (!seenTransition) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        // result = Pz/(Pu+Pz)\n        //        = exp(logPz)/(exp(logPu)+exp(logPz))\n        //        = 1/(1+exp(logPu-logPz))\n        return 1.0 / (1.0 + Math.exp(totalDelta));\n    };\n    // JavaScript doesn't have the concept of 64-bit integers, so split the tag into two 32-bit ints.\n    ZawgyiUnicodeMarkovModel.BINARY_TAG_LEAD = 0x555A4D4F;\n    ZawgyiUnicodeMarkovModel.BINARY_TAG_TRAIL = 0x44454C20;\n    return ZawgyiUnicodeMarkovModel;\n}());\nvar ZawgyiDetector = /** @class */ (function () {\n    /** Loads the model from the resource and returns a ZawgyiDetector instance. */\n    function ZawgyiDetector() {\n        // Convert the Base64 to an ArrayBuffer.\n        var arrayBuffer = getArrayBuffer();\n        this.model = new ZawgyiUnicodeMarkovModel(new DataView(arrayBuffer, 0), 0);\n    }\n    /**\n     * Performs detection on the given string. Returns the probability that the string is Zawgyi given\n     * that it is either Unicode or Zawgyi. Values approaching 1 are strong Zawgyi; values approaching\n     * 0 are strong Unicode; and values close to 0.5 are toss-ups.\n     *\n     * <p>If the string does not contain any Myanmar range code points, -Infinity is returned.\n     *\n     * @param input The string on which to run detection.\n     * @return The probability that the string is Zawgyi (between 0 and 1), or -Infinity if the string\n     *     contains no Myanmar range code points.\n     */\n    ZawgyiDetector.prototype.getZawgyiProbability = function (input) {\n        return this.model.predict(input);\n    };\n    return ZawgyiDetector;\n}());\nexports.ZawgyiDetector = ZawgyiDetector;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\n/* Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction runPhase(rules, inString) {\n    var outString = \"\";\n    var midString = inString;\n    var startOfString = true;\n    while (midString.length > 0) {\n        var foundRule = false;\n        for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n            var rule = rules_1[_i];\n            if (rule.matchOnStart == null || startOfString) {\n                var m = midString.match(rule.p);\n                // Matching uses only unnamed groups\n                if (m != null) {\n                    foundRule = true;\n                    var rightPartSize = midString.length - m[0].length;\n                    midString = midString.replace(rule.p, rule.s);\n                    var newStart = midString.length - rightPartSize;\n                    if (rule.revisit == null) {\n                        // New location is reset unless \"revisit\" is set to beginning of replacement.\n                        outString += midString.substring(0, newStart);\n                        midString = midString.substring(newStart);\n                    }\n                }\n            }\n        }\n        if (!foundRule) {\n            outString += midString[0];\n            midString = midString.substring(1);\n        }\n        startOfString = false;\n    }\n    return outString;\n    // End of phase\n}\nfunction runAllPhases(allRules, inString) {\n    var outString = inString;\n    for (var _i = 0, allRules_1 = allRules; _i < allRules_1.length; _i++) {\n        var rules = allRules_1[_i];\n        outString = runPhase(rules, outString);\n    }\n    return outString;\n}\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my-t-my-s0-zawgyi.txt\nfunction getAllRulesZ2U() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u1064'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u1064'),\n            s: '\\u1004\\u103A\\u1039$1',\n        },\n        {\n            p: RegExp('^' + '\\u1064'),\n            s: '\\u1004\\u103A\\u1039',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u102D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108C'),\n            s: '\\u1004\\u103A\\u1039$1\\u102E',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108D'),\n            s: '\\u1004\\u103A\\u1039$1\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u1033\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102D\\u102F',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108C'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102E',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108D'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108E'),\n            s: '$1\\u103B\\u102D\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u108B'),\n            s: '\\u1004\\u103A\\u1039\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u108C'),\n            s: '\\u1004\\u103A\\u1039\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u108D'),\n            s: '\\u1004\\u103A\\u1039\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u106A'),\n            s: '\\u1009',\n        },\n        {\n            p: RegExp('^' + '\\u106B'),\n            s: '\\u100A',\n        },\n        {\n            p: RegExp('^' + '\\u108F'),\n            s: '\\u1014',\n        },\n        {\n            p: RegExp('^' + '\\u1090'),\n            s: '\\u101B',\n        },\n        {\n            p: RegExp('^' + '\\u1086'),\n            s: '\\u103F',\n        },\n        {\n            p: RegExp('^' + '[\\u103A\\u107D]'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103C*\\u108A'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u103C'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '[\\u103D\\u1087]'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1088'),\n            s: '\\u103E\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1089'),\n            s: '\\u103E\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1033'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1034'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1039'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '[\\u1094\\u1095]'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1039'),\n            s: '\\u1009\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1061'),\n            s: '\\u1009\\u1039\\u1001',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1062'),\n            s: '\\u1009\\u1039\\u1002',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1065'),\n            s: '\\u1009\\u1039\\u1005',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1068'),\n            s: '\\u1009\\u1039\\u1007',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1076'),\n            s: '\\u1009\\u1039\\u1013',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1078'),\n            s: '\\u1009\\u1039\\u1015',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u107A'),\n            s: '\\u1009\\u1039\\u1017',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1079'),\n            s: '\\u1009\\u1039\\u1016',\n        },\n        {\n            p: RegExp('^' + '\\u105A'),\n            s: '\\u102B\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1060'),\n            s: '\\u1039\\u1000',\n        },\n        {\n            p: RegExp('^' + '\\u1061'),\n            s: '\\u1039\\u1001',\n        },\n        {\n            p: RegExp('^' + '\\u1062'),\n            s: '\\u1039\\u1002',\n        },\n        {\n            p: RegExp('^' + '\\u1063'),\n            s: '\\u1039\\u1003',\n        },\n        {\n            p: RegExp('^' + '\\u1065'),\n            s: '\\u1039\\u1005',\n        },\n        {\n            p: RegExp('^' + '[\\u1066\\u1067]'),\n            s: '\\u1039\\u1006',\n        },\n        {\n            p: RegExp('^' + '\\u1068'),\n            s: '\\u1039\\u1007',\n        },\n        {\n            p: RegExp('^' + '\\u1069'),\n            s: '\\u1039\\u1008',\n        },\n        {\n            p: RegExp('^' + '\\u106C'),\n            s: '\\u1039\\u100B',\n        },\n        {\n            p: RegExp('^' + '\\u106D'),\n            s: '\\u1039\\u100C',\n        },\n        {\n            p: RegExp('^' + '\\u1070'),\n            s: '\\u1039\\u100F',\n        },\n        {\n            p: RegExp('^' + '[\\u1071\\u1072]'),\n            s: '\\u1039\\u1010',\n        },\n        {\n            p: RegExp('^' + '\\u1096'),\n            s: '\\u1039\\u1010\\u103D',\n        },\n        {\n            p: RegExp('^' + '[\\u1073\\u1074]'),\n            s: '\\u1039\\u1011',\n        },\n        {\n            p: RegExp('^' + '\\u1075'),\n            s: '\\u1039\\u1012',\n        },\n        {\n            p: RegExp('^' + '\\u1076'),\n            s: '\\u1039\\u1013',\n        },\n        {\n            p: RegExp('^' + '\\u1077'),\n            s: '\\u1039\\u1014',\n        },\n        {\n            p: RegExp('^' + '\\u1078'),\n            s: '\\u1039\\u1015',\n        },\n        {\n            p: RegExp('^' + '\\u1079'),\n            s: '\\u1039\\u1016',\n        },\n        {\n            p: RegExp('^' + '\\u107A'),\n            s: '\\u1039\\u1017',\n        },\n        {\n            p: RegExp('^' + '[\\u107B\\u1093]'),\n            s: '\\u1039\\u1018',\n        },\n        {\n            p: RegExp('^' + '\\u107C'),\n            s: '\\u1039\\u1019',\n        },\n        {\n            p: RegExp('^' + '\\u1085'),\n            s: '\\u1039\\u101C',\n        },\n        {\n            p: RegExp('^' + '\\u108E'),\n            s: '\\u102D\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u106E'),\n            s: '\\u100D\\u1039\\u100D',\n        },\n        {\n            p: RegExp('^' + '\\u106F'),\n            s: '\\u100D\\u1039\\u100E',\n        },\n        {\n            p: RegExp('^' + '\\u1091'),\n            s: '\\u100F\\u1039\\u100D',\n        },\n        {\n            p: RegExp('^' + '\\u1092'),\n            s: '\\u100B\\u1039\\u100C',\n        },\n        {\n            p: RegExp('^' + '\\u1097'),\n            s: '\\u100B\\u1039\\u100B',\n        },\n        {\n            p: RegExp('^' + '\\u104E'),\n            s: '\\u104E\\u1004\\u103A\\u1038',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '\\u1040([^\\u1040-\\u1049])'),\n            s: '\\u101D$1',\n            matchOnStart: 'true',\n        },\n        {\n            p: RegExp('^' + '\\u1044([^\\u1040-\\u1049])'),\n            s: '\\u104E$1',\n            matchOnStart: 'true',\n            revisit: 0,\n        },\n        {\n            p: RegExp('^' + '([^\\u1040-\\u1049])\\u1040$'),\n            s: '$1\\u101D',\n        },\n        {\n            p: RegExp('^' + '([^\\u1040-\\u1049])\\u1044$'),\n            s: '$1\\u104E',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u103F])\\u1040([^\\u1040-\\u1049])'),\n            s: '$1\\u101D$2',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u103F])\\u1044([^\\u1040-\\u1049])'),\n            s: '$1\\u104E$2',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '([ \\u00A0\\u1680\\u2000-\\u200D\\u202F\\u205F\\u2060\\u3000\\uFEFF])\\u1037'),\n            s: '\\u1037$1',\n        },\n        {\n            p: RegExp('^' + '([ \\u00A0\\u1680\\u2000-\\u200D\\u202F\\u205F\\u2060\\u3000\\uFEFF]+)([\\u102B-\\u1030\\u1032-\\u103B\\u103D\\u103E])'),\n            s: '$2',\n        },\n        {\n            p: RegExp('^' + '\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u1004\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1004\\u103A\\u1039$1\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u1037+([\\u1000-\\u1021])'),\n            s: '$1\\u1031\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u103C([\\u1000-\\u1021])'),\n            s: '$1\\u103C\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+([\\u1000-\\u1021])([\\u103B\\u103D\\u103E]+)'),\n            s: '$1$2\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+([\\u1000-\\u102A])'),\n            s: '$1\\u1031',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '\\u103B\\u103A'),\n            s: '\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u1037'),\n            s: '\\u1037\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1036([\\u103B-\\u103E]*)([\\u102B-\\u1030\\u1032]+)'),\n            s: '$1$2\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u102B\\u102C\\u102F\\u1030])([\\u102D\\u102E\\u1032])'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '\\u103C([\\u1000-\\u1021])'),\n            s: '$1\\u103C',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103B-\\u103E])\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$2$1',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '\\u103A\\u1039$1\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u1036([\\u103B-\\u103E]+)'),\n            s: '$1\\u1036',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E]+)\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E]+)\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '([\\u1031]+)([\\u102B-\\u1030\\u1032]*)\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$3$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u1030\\u1032]+)\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103B-\\u103E]*)([\\u1031]+)([\\u103B-\\u103E]*)'),\n            s: '$1$3$2',\n        },\n        {\n            p: RegExp('^' + '\\u1037([\\u102D-\\u1030\\u1032\\u1036\\u103B-\\u103E]+)'),\n            s: '$1\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u1030\\u1032]+)([\\u103B-\\u103E]+)'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u102B-\\u1032\\u1036\\u103B-\\u103E])\\u103A([\\u1000-\\u1021])'),\n            s: '$1\\u103A$2$3',\n        },\n    ];\n    var rules6 = [\n        {\n            p: RegExp('^' + '\\u1005\\u103B'),\n            s: '\\u1008',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u1032])([\\u103B-\\u103E])'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u000136u\\u102B-\\u1030\\u1032\\u1037\\u103A-\\u103F])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u102F'),\n            s: '\\u102F\\u1036',\n        },\n    ];\n    var rules7 = [\n        {\n            p: RegExp('^' + '\\u102D\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1032\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1039+'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103E+'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u102F[\\u1030\\u103A]'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102E'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '([ \\u00A0\\u1680\\u2000-\\u200D\\u202F\\u205F\\u2060\\u3000\\uFEFF])+([\\u102B-\\u1032\\u1036-\\u103E])'),\n            s: '$2',\n        },\n        {\n            p: RegExp('^' + '\\u200B+'),\n            s: '',\n            matchOnStart: 'true',\n        },\n        {\n            p: RegExp('^' + '\\u200B+$'),\n            s: '',\n        },\n        {\n            p: RegExp('^' + '[ \\u00A0\\u1680\\u2000-\\u200D\\u202F\\u205F\\u2060\\u3000\\uFEFF]*\\u200B[ \\u00A0\\u1680\\u2000-\\u200D\\u202F\\u205F\\u2060\\u3000\\uFEFF]*'),\n            s: '\\u200B',\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5, rules6, rules7];\n}\n// END OF TRANSLITERATION RULES\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my-t-my-d0-zawgyi.txt\nfunction getAllRulesU2Z() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B'),\n            s: '$1\\u103A\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102D\\u1036'),\n            s: '$1\\u108E',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102D'),\n            s: '$1\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102E'),\n            s: '$1\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u1036'),\n            s: '$1\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u1031'),\n            s: '$1\\u1031\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102D\\u102F'),\n            s: '$1\\u103A\\u1033\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102D'),\n            s: '$1\\u103A\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102E\\u102F'),\n            s: '$1\\u103A\\u108C\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102E'),\n            s: '$1\\u103A\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u1036'),\n            s: '$1\\u103A\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103C'),\n            s: '$1\\u103B\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u102D'),\n            s: '\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u102E'),\n            s: '\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u1036'),\n            s: '\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '$1\\u1064',\n        },\n        {\n            p: RegExp('^' + '\\u1025([\\u102B-\\u1030\\u1032])\\u1038'),\n            s: '\\u106A$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102F\\u1036'),\n            s: '\\u1025\\u1036\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u1036'),\n            s: '\\u108E',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103E'),\n            s: '\\u108A',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u1030'),\n            s: '\\u1089',\n        },\n        {\n            p: RegExp('^' + '\\u103A'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103B'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103C'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103D'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103E'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103F'),\n            s: '\\u1086',\n        },\n        {\n            p: RegExp('^' + '([\\u1019])\\u103E\\u1030'),\n            s: '$1\\u103D\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u102B\\u103A'),\n            s: '\\u105A',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1010\\u103D'),\n            s: '\\u1096',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1000'),\n            s: '\\u1060',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1001'),\n            s: '\\u1061',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1002'),\n            s: '\\u1062',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1003'),\n            s: '\\u1063',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1005'),\n            s: '\\u1065',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1006'),\n            s: '\\u1067',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1007'),\n            s: '\\u1068',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1008'),\n            s: '\\u1069',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100B'),\n            s: '\\u106C',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100C'),\n            s: '\\u106D',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100F'),\n            s: '\\u1070',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1010'),\n            s: '\\u1072',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1011'),\n            s: '\\u1074',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1012'),\n            s: '\\u1075',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1013'),\n            s: '\\u1076',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1014'),\n            s: '\\u1077',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1015'),\n            s: '\\u1078',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1016'),\n            s: '\\u1079',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1017'),\n            s: '\\u107A',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1018'),\n            s: '\\u1093',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1019'),\n            s: '\\u107C',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u101C'),\n            s: '\\u1085',\n        },\n        {\n            p: RegExp('^' + '\\u100D\\u1039\\u100D'),\n            s: '\\u106E',\n        },\n        {\n            p: RegExp('^' + '\\u100D\\u1039\\u100E'),\n            s: '\\u106F',\n        },\n        {\n            p: RegExp('^' + '\\u100F\\u1039\\u100D'),\n            s: '\\u1091',\n        },\n        {\n            p: RegExp('^' + '\\u100B\\u1039\\u100C'),\n            s: '\\u1092',\n        },\n        {\n            p: RegExp('^' + '\\u100B\\u1039\\u100B'),\n            s: '\\u1097',\n        },\n        {\n            p: RegExp('^' + '\\u104E\\u1004\\u103A\\u1038'),\n            s: '\\u104E',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '\\u1014([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u103B'),\n            s: '\\u103B\\u108F$1$2',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u103B([\\u103C\\u103D]*)(\\u1031*)'),\n            s: '$2\\u103B\\u108F$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B([\\u103C\\u103D]*)\\u1031'),\n            s: '\\u1031\\u103B$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103D\\u1031\\u1037'),\n            s: '\\u1031$1\\u1094\\u103D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])(\\u108A)\\u1031'),\n            s: '\\u1031$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u1064\\u103B'),\n            s: '\\u103B$1\\u1064',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u103A\\u103C\\u103D]+)\\u1031'),\n            s: '\\u1031$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u103B'),\n            s: '\\u103B$1$2$3',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u102A])\\u1031'),\n            s: '\\u1031$1',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])'),\n            s: '\\u108F$1',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])\\u1037'),\n            s: '\\u108F$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])\\u1037'),\n            s: '\\u1014$1\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1032\\u1037'),\n            s: '\\u1014\\u1032\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1037'),\n            s: '\\u1014\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1032([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1\\u1032\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u108F$1$2',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u108F$1$2',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u108F$1',\n        },\n        {\n            p: RegExp('^' + '([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u1037'),\n            s: '$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '([^\\u1040-\\u1049])\\u1040([\\u102B-\\u103F])'),\n            s: '$1\\u101D$2',\n        },\n        {\n            p: RegExp('^' + '([^\\u1040-\\u1049])\\u104E'),\n            s: '$1\\u1044',\n        },\n        {\n            p: RegExp('^' + '\\u1031\\u1040([^\\u1040-\\u1049])'),\n            s: '\\u1031\\u101D$1',\n        },\n        {\n            p: RegExp('^' + '\\u1009\\u103A'),\n            s: '\\u1025\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u103A'),\n            s: '\\u103A\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u102B\\u102C\\u102F\\u1030])([\\u102D\\u102E\\u1032])'),\n            s: '$2$1',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '\\u103A\\u103C'),\n            s: '\\u103C\\u107D',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u1094'),\n            s: '\\u103C\\u1095',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1083$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1084$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])'),\n            s: '\\u1081$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])'),\n            s: '\\u1082$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u103C\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1083$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u103C\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1084$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u103D([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u107F$1\\u1087$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u103D([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1080$1\\u1087$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u102F([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u107F$1\\u1033$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u102F([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1080$1\\u1033$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u1030([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u107F$1\\u1034$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u1030([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1080$1\\u1034$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u107F$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])'),\n            s: '\\u1080$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u103C\\u108A])'),\n            s: '\\u1081$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u103C\\u108A])'),\n            s: '\\u1082$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u103D'),\n            s: '\\u103B$1\\u1087',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u103D'),\n            s: '\\u107E$1\\u1087',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u102F'),\n            s: '\\u103B$1\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u102F'),\n            s: '\\u107E$1\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])\\u1030'),\n            s: '\\u103B$1\\u1034',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u1030'),\n            s: '\\u107E$1\\u1034',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u100A\\u106B])'),\n            s: '\\u1082$1',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1009\\u106A])'),\n            s: '\\u103B\\u106A',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])'),\n            s: '\\u107E$1',\n        },\n        {\n            p: RegExp('^' + '\\u1009([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u106A$1',\n        },\n        {\n            p: RegExp('^' + '\\u100A([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u106B$1',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102D'),\n            s: '\\u102D\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103A([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064])\\u102F[\\u1037\\u1094\\u1095]'),\n            s: '\\u103A$1\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102F[\\u1037\\u1094\\u1095]'),\n            s: '\\u103A\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102F'),\n            s: '\\u103A\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u1064\\u102E'),\n            s: '\\u108C',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '\\u1037([\\u102D-\\u1030\\u1032\\u1036])'),\n            s: '$1\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u102B-\\u1032\\u1036\\u103B-\\u103E])\\u103A([\\u1000-\\u1021])'),\n            s: '$1\\u103A$2$3',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u1033\\u1094'),\n            s: '\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u102F'),\n            s: '$1$2$3$4\\u1033',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u102F'),\n            s: '$1$2$3$4\\u1033',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026\\u108F])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u1030'),\n            s: '$1$2$3$4\\u1034',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102F\\u1030\\u1037\\u103C\\u103D\\u1087-\\u108A]*)([\\u102D\\u102E\\u1032\\u1036\\u1039\\u1064]*)\\u1030'),\n            s: '$1$2$3$4\\u1034',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u102B-\\u1030\\u1032\\u103C-\\u103F])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u1036\\u1037\\u103A])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u103A([\\u1064\\u108B-\\u108E])\\u102D\\u102F'),\n            s: '\\u103A$1\\u102D\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102D\\u102F'),\n            s: '\\u103A\\u102D\\u1033',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B\\u103A'),\n            s: '$1\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '([\\u102D-\\u1030\\u1032])\\u103A([\\u1000-\\u1021])\\u103A'),\n            s: '$1$2\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u103A'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u103A'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u103A'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102E'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u1030'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102B\\u102B+'),\n            s: '\\u102B',\n        },\n        {\n            p: RegExp('^' + '\\u102C\\u102C+'),\n            s: '\\u102C',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1031\\u1031+'),\n            s: '\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1032\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103E+'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '([\\u102F\\u1033])\\u102D'),\n            s: '\\u102D$1',\n        },\n        {\n            p: RegExp('^' + '([\\u102F\\u1033])\\u1036'),\n            s: '\\u1036$1',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u1039'),\n            s: '\\u1039\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1032\\u103C'),\n            s: '\\u103C\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u103C'),\n            s: '\\u103C\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u1088'),\n            s: '\\u1088',\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5];\n}\n// END OF TRANSLITERATION RULES\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my_normalize_zawgyi_transliteration_rules.txt\nfunction getAllRulesZNorm() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '\\u1009\\u1039'),\n            s: '\\u1025\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u102F([\\u102D\\u1036])'),\n            s: '$1\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1039([\\u1037\\u1094\\u1095])'),\n            s: '$1\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103C([\\u102E\\u1032])'),\n            s: '$1\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u1033\\u102D'),\n            s: '\\u102D\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102D'),\n            s: '\\u102D\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u1089'),\n            s: '\\u103D\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u1064\\u103A'),\n            s: '\\u103A\\u1064',\n        },\n        {\n            p: RegExp('^' + '\\u1067'),\n            s: '\\u1066',\n        },\n        {\n            p: RegExp('^' + '\\u1072'),\n            s: '\\u1071',\n        },\n        {\n            p: RegExp('^' + '\\u1074'),\n            s: '\\u1073',\n        },\n        {\n            p: RegExp('^' + '\\u1093'),\n            s: '\\u107B',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1033+'),\n            s: '\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u1034+'),\n            s: '\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1039+'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E+'),\n            s: '\\u103D',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '[\\u1037\\u1094\\u1095]+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1005\\u103A'),\n            s: '\\u1008',\n        },\n        {\n            p: RegExp('^' + '\\u101D'),\n            s: '\\u1040',\n        },\n        {\n            p: RegExp('^' + '\\u104E$'),\n            s: '\\u1044',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u1088'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103A'),\n            s: '\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u1088'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103B([\\u1000-\\u1021])\\u103B$'),\n            s: '\\u103B$1',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u1031\\u1031+'),\n            s: '\\u1031',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000-\\u1021])\\u1036\\u102F'),\n            s: '$1$2\\u1033\\u1036',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '\\u1033'),\n            s: '\\u102F',\n        },\n    ];\n    var rules6 = [\n        {\n            p: RegExp('^' + '\\u1036\\u102F'),\n            s: '\\u102F\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u1039\\u1037'),\n            s: '\\u1037\\u1039',\n        },\n        {\n            p: RegExp('^' + '[|\\u106A\\u106B]'),\n            s: '\\u100A',\n        },\n    ];\n    var rules7 = [\n        {\n            p: RegExp('^' + '[    -‍⁠  　﻿]+([\\u1000-\\u109F])'),\n            s: '$1',\n            revisit: 0,\n        },\n        {\n            p: RegExp('^' + '\\u200B+'),\n            s: '',\n            matchOnStart: 'true',\n        },\n        {\n            p: RegExp('^' + '\\u200B+$'),\n            s: '',\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5, rules6, rules7];\n}\n// END OF TRANSLITERATION RULES\nvar ZawgyiConverter = /** @class */ (function () {\n    function ZawgyiConverter() {\n    }\n    ZawgyiConverter.prototype.zawgyiToUnicode = function (inString) {\n        return runAllPhases(getAllRulesZ2U(), inString);\n    };\n    ZawgyiConverter.prototype.unicodeToZawgyi = function (inString) {\n        return runAllPhases(getAllRulesU2Z(), inString);\n    };\n    ZawgyiConverter.prototype.normalizeZawgyi = function (inString) {\n        return runAllPhases(getAllRulesZNorm(), inString);\n    };\n    return ZawgyiConverter;\n}());\nexports.ZawgyiConverter = ZawgyiConverter;\n","const spellingFix = require('./spellingCheck');\nconst fontDetect = require('./detector');\nconst globalOptions = require('./globalOptions');\n\nconst\tfontTypes = {\n  unicode: \"unicode\",\n  uni: \"unicode\",\n  zawgyi: \"zawgyi\",\n  zaw: \"zawgyi\"\n};\nconst mmCharacterRange = /[\\u1000-\\u109F]/;\nconst library = {};\n\n/** Converting Libarary **/\nlibrary.convert = {\n  unicode: {\n    zawgyi: {\n      oneTime: [\n        [/([\\u1000-\\u1021](\\u1039[\\u1000-\\u1021]|[\\u103b\\u103c\\u103d]+)[\\u102d\\u102e\\u1031\\u1032\\u1036\\u1037\\u103e]*)\\u102f/g, \"$1\\u1033\"],\n        [/([\\u1000-\\u1021](\\u1039[\\u1000-\\u1021]|[\\u103b\\u103c\\u103d]+)[\\u102d\\u102e\\u1031\\u1032\\u1036\\u1037\\u103e]*)\\u1030/g, \"$1\\u1034\"],\n        [/([\\u1000-\\u1021](\\u1039[\\u1000-\\u1021]|[\\u103b\\u103c\\u103d]+)[\\u102d\\u102e\\u1031\\u1032\\u1036\\u1037\\u103e]*)\\u1037/g, \"$1\\u1094\"],\n        [/([\\u1000-\\u1021])\\u103b([\\u103d][\\u103e]*)/g, \"$1\\u107d$2\"],\n        // ့ rules\n        [/([\\u1033\\u1034])[\\u1037\\u1094]/g, \"$1\\u1095\"],\n        // [/\\u107e([\\u1000-\\u1021])/],\n\n        [/\\u103c([\\u1000-\\u1021][\\u102f\\u1030\\u1039\\u103b\\u103d\\u103e])/g, \"\\u1082$1\"],\n\n        [/\\u1004\\u103a\\u1039/g, \"\\u1064\"],\n        [/\\u1064([\\u1000-\\u1021])/g, \"$1\\u1064\"],\n\n        // င်္ + ျ ြ ွ ှ ့ ု ူ + ိ ီ ံ\n        [/\\u1064([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030]*)\\u102d/g, '\\u108b$1'],\n        [/\\u1064([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030]*)\\u102e/g, '\\u108c$1'],\n        [/\\u1064([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030]*)\\u1036/g, '\\u108d$1'],\n\n        // ြ first\n        [/([\\u1000-\\u1021][^\\u1000-\\u1021]*)([\\u103c\\u1082])/g, \"$2$1\"],\n        [/([\\u1000-\\u1021]\\u1039)\\u103c([\\u1000-\\u1021])/g, \"\\u103c$1$2\"],\n\n        // ေ first\n        [/([\\u1000-\\u1021][^\\u1000-\\u1021]*)\\u1031/g, \"\\u1031$1\"],\n        [/([\\u1000-\\u1021]\\u1039)\\u1031([\\u1000-\\u1021])/g, \"\\u1031$1$2\"],\n        [/\\u103c\\u1031/g, \"\\u1031\\u103c\"], // ြေ -> ေြ\n\n        // နဉ + ​(ျ ြ ွ ှ ု ူ)\n        [/\\u1014([\\u102f\\u1030\\u1039\\u103b\\u103d\\u103e])/g, \"\\u108f$1\"],\n        [/\\u103c\\u1014/g, \"\\u103c\\u108f\"], // ြန\n        [/\\u1009([\\u102f\\u1030\\u1039\\u103b\\u103d\\u103e])/g, \"\\u106a$1\"],\n        // [/\\u103c\\u1009/g, \"\\u1081\\u106a\"], // ြဉ\n\n        // \\u101e\\u107e\\u1000\\u1064\\u1014\\u1039\n\n        [/\\u104e\\u1004\\u103a\\u1038/g, \"\\u104e\"],\n        [/\\u102b\\u103a/g, \"\\u105a\"],\n        [/\\u103f/g, \"\\u1086\"],\n        [/\\u1039\\u101c/g, \"\\u1085\"],\n        [/\\u1039\\u1019/g, \"\\u107c\"],\n        [/\\u1039\\u1018/g, \"\\u107b\"],\n        [/\\u1039\\u1017/g, \"\\u107a\"],\n        [/\\u1039\\u1016/g, \"\\u1079\"],\n        [/\\u1039\\u1015/g, \"\\u1078\"],\n        [/\\u1039\\u1014/g, \"\\u1077\"],\n        [/\\u1039\\u1013/g, \"\\u1076\"],\n        [/\\u1039\\u1012/g, \"\\u1075\"],\n        [/\\u1039\\u1011/g, \"\\u1073\"],\n        [/\\u1039\\u1010/g, \"\\u1071\"],\n        [/\\u1039\\u100f/g, \"\\u1070\"],\n        [/\\u100e\\u1039\\u100d/g, \"\\u106f\"],\n        [/\\u100f\\u1039\\u100d/g, \"\\u1091\"],\n        [/\\u100d\\u1039\\u100d/g, \"\\u106e\"],\n        [/\\u100b\\u1039\\u100c/g, \"\\u1092\"],\n        [/\\u1039\\u100c/g, \"\\u106d\"],\n        [/\\u100b\\u1039\\u100b/g, \"\\u1097\"],\n        [/\\u1039\\u100b/g, \"\\u106c\"],\n        // [/\\u1009/g, \"\\u106a\"],\n        [/\\u1039\\u1005\\u103b/g, \"\\u1069\"],\n        [/\\u1039\\u1007/g, \"\\u1068\"],\n        [/\\u1039\\u1006/g, \"\\u1066\"],\n        [/\\u1039\\u1005/g, \"\\u1065\"],\n        [/\\u1039\\u1003/g, \"\\u1063\"],\n        [/\\u1039\\u1002/g, \"\\u1062\"],\n        [/\\u1039\\u1001/g, \"\\u1061\"],\n        [/\\u103d\\u103e/g, \"\\u108a\"],\n        [/\\u103e\\u1030/g, \"\\u1089\"],\n        [/\\u1039\\u1000/g, \"\\u1060\"],\n\n        [/\\u103e\\u102f/g, \"\\u1088\"],\n        // [/\\u1037/g, \"\\u1037\"],\n\n        [/\\u103a/g, \"\\u1039\"],\n        [/\\u103b/g, \"\\u103a\"],\n        [/\\u103c/g, \"\\u103b\"],\n        [/\\u103d/g, \"\\u103c\"],\n        [/\\u103e/g, \"\\u103d\"],\n\n        [/([^\\u1000\\u1003\\u1006\\u100f\\u1010\\u1011\\u1018\\u1021\\u101a\\u101c\\u101e\\u101f])\\u1071/g, \"$1\\u1072\"],\n      ],\n      asLongAsMatch: [\n        // [/([\\u103b\\u103c\\u103d\\u103e])\\u1031/g, \"\\u1031$1\"],\n\n        [/\\u103b([\\u1000\\u1003\\u1006\\u100f\\u1010\\u1011\\u1018\\u1021\\u101a\\u101c\\u101e\\u101f])/g, \"\\u107e$1\"],\n\n        [/\\u103b([\\u1000-\\u1021\\u106a\\u108f](\\u103c\\u103d|\\u108a|\\u103c)[\\u102d\\u102e])/g, \"\\u1083$1\"],\n        [/\\u107e([\\u1000-\\u1021](\\u103c\\u103d|\\u108a|\\u103c)[\\u102d\\u102e])/g, \"\\u1084$1\"],\n\n        [/\\u103b([\\u1000-\\u1021\\u106a\\u108f][\\u102d\\u102e])/g, \"\\u107f$1\"],\n        [/\\u107e([\\u1000-\\u1021][\\u102d\\u102e])/g, \"\\u1080$1\"],\n\n        [/\\u103b([\\u1000-\\u1021\\u106a\\u108f][\\u103c\\u103e\\u108a])/g, \"\\u1081$1\"],\n        [/\\u107e([\\u1000-\\u1021][\\u103c\\u103e\\u108a])/g, \"\\u1082$1\"],\n\n        [/\\u103b\\u1009/g, \"\\u1081\\u106a\"],\n      ]\n    }\n  },\n  zawgyi: {\n    unicode: {\n      oneTime: [\n        [/([^\\u1040-\\u1049\\+\\-\\*\\/])?\\u1040([^\\u1040-\\u1049\\+\\-\\*\\/])?/g, '$1\\u101d$2'],\n        [/\\u103d|\\u1087/g, '\\u103e'],\n        [/\\u103c/g, '\\u103d'],\n        [/[\\u103b\\u107e-\\u1084]/g, '\\u103c'],\n        [/[\\u103a\\u107d]/g, '\\u103b'],\n        [/\\u1039/g, '\\u103a'],\n        [/[\\u1094-\\u1095]/g, '\\u1037'],\n        [/\\s([\\u1037])/g, '$1'], // remove space infront\n        [/[\\u107b\\u1093]/g, '\\u1039\\u1018'],\n        [/\\u1033/g, '\\u102f'],\n        [/\\u1034/g, '\\u1030'],\n        [/\\u1088/g, '\\u103e\\u102f'],\n        // [/\\u1064/g, '\\u1004\\u103a\\u1039'],\n        [/\\u1089/g, '\\u103e\\u1030'],\n        [/\\u108a/g, '\\u103d\\u103e'],\n        [/\\u1061/g, '\\u1039\\u1001'],\n        [/\\u108f/g, '\\u1014'],\n        [/\\u1062/g, '\\u1039\\u1002'],\n        [/\\u1063/g, '\\u1039\\u1003'],\n        [/\\u1065/g, '\\u1039\\u1005'],\n        [/[\\u1066\\u1067]/g, '\\u1039\\u1006'],\n        [/\\u1068/g, '\\u1039\\u1007'],\n        [/\\u1069/g, '\\u1039\\u1005\\u103b'],\n        [/\\u106a/g, '\\u1009'],\n        [/\\u106b/g, '\\u100a'],\n        [/\\u106c/g, '\\u1039\\u100b'],\n        [/\\u106d/g, '\\u1039\\u100c'],\n        [/\\u106e/g, '\\u100d\\u1039\\u100d'],\n        [/\\u106f/g, '\\u100e\\u1039\\u100d'],\n        [/\\u1070/g, '\\u1039\\u100f'],\n        [/[\\u1071\\u1072]/g, '\\u1039\\u1010'],\n        [/[\\u1073\\u1074]/g, '\\u1039\\u1011'],\n        [/\\u1075/g, '\\u1039\\u1012'],\n        [/\\u1076/g, '\\u1039\\u1013'],\n        [/\\u1077/g, '\\u1039\\u1014'],\n        [/\\u1078/g, '\\u1039\\u1015'],\n        [/\\u1079/g, '\\u1039\\u1016'],\n        [/\\u1079/g, '\\u1039\\u1016'],\n        [/\\u107a/g, '\\u1039\\u1017'],\n        [/\\u107c/g, '\\u1039\\u1019'],\n        [/\\u1085/g, '\\u1039\\u101c'],\n        [/\\u1086/g, '\\u103f'],\n        [/\\u1090/g, '\\u101b'],\n        [/\\u1091/g, '\\u100f\\u1039\\u100d'],\n        [/\\u1092/g, '\\u100b\\u1039\\u100c'],\n        [/\\u1097/g, '\\u100b\\u1039\\u100b'],\n        [/\\u1060/g, '\\u1039\\u1000'],\n        [/\\u105a/g, '\\u102b\\u103a'],\n        [/\\u104e/g, '\\u104e\\u1004\\u103a\\u1038'],\n        [/\\u1025\\u103a/g, '\\u1009\\u103a'],\n\n\n\n        [/([\\u102b\\u102c\\u102d\\u102e\\u102f\\u1030\\u1031\\u1032\\u1036\\u1037\\u1038\\u103b\\u103c\\u103d\\u103e]+)(\\u1039[\\u1000-\\u1021])/g, '$2$1'],\n        // eg: က + ျ ြ ွ ှ ံ ့ ိ ီ ု ူ +​ င်္ီ\n        [/([\\u1000-\\u1021])([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030\\u102d\\u102e\\u1036]*)\\u108b/g, '$1\\u1064$2\\u102d'],\n        [/([\\u1000-\\u1021])([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030\\u102d\\u102e\\u1036]*)\\u108c/g, '$1\\u1064$2\\u102e'],\n        [/([\\u1000-\\u1021])([\\u103b\\u103c\\u103d\\u103e\\u1037\\u102f\\u1030\\u102d\\u102e\\u1036]*)\\u108d/g, '$1\\u1064$2\\u1036'],\n        [/\\u108e/g, '\\u102d\\u1036'],\n        [/\\u103c([\\u1000-\\u1021])/g, '$1\\u103c'],\n        [/\\u1031([\\u1000-\\u1021])/g, '$1\\u1031'],\n        [/([\\u102b\\u102c\\u102d\\u102e\\u102f\\u1030\\u1031\\u1032\\u1036\\u1037\\u1038\\u103b\\u103c\\u103d\\u103e]+)\\u1064/g, '\\u1064$1'],\n        // [/([\\u103b\\u103c\\u103d])(\\u1064)/g, '$2$1'],\n        [/\\u1031(\\u1064)/g, '$1\\u1031'],\n        [/([\\u1000-\\u1021])(\\u1064)/g, '$2$1'],\n        [/\\u0020(\\u1039[\\u1000-\\u1021])/g, '$1'],\n\n\n        [/\\u1064/g, '\\u1004\\u103a\\u1039'],\n      ],\n      asLongAsMatch: [\n        [/([\\u102b\\u102c\\u102d\\u102e\\u1031\\u102f\\u1030\\u1032\\u1036\\u1037\\u1038])([\\u103b\\u103c\\u103d\\u103e])/g, \"$2$1\"],\n        [/\\u103d([\\u103b\\u103c])/g, \"$1\\u103d\"],\n        [/\\u103e([\\u103b\\u103c\\u103d])/g, \"$1\\u103e\"],\n        [/([\\u102f\\u1030])([\\u102d\\u102e])/g, \"$2$1\"],\n        [/\\u1036([\\u102d\\u102e\\u102f\\u1030])/g, \"$1\\u1036\"],\n        [/\\u1037([\\u1031\\u102c\\u102b\\u102f\\u1030\\u1032])/g, \"$1\\u1037\"],\n        [/([\\u1031\\u102b\\u102c])(\\u1039[\\u1000-\\u1021])/g, \"$2$1\"],\n        [/([\\u102b\\u102c])(\\u1004\\u103a\\u1039)/g, \"$2$1\"]\n      ]\n    }\n  }\n};\n\n/**\n * Font Converter agent\n * @param content Text that you want to convert\n * @param to Type of font to convert. Default: \"unicode\";\n * @param from Type of font of content text\n * @return converted text\n */\nfunction fontConvert(content, to, from) {\n  if (!content) {\n    if (!globalOptions.isSilentMode()) console.warn('Content must be specified on knayi.fontConvert.');\n    return '';\n  }\n\n  if (content === '' || !mmCharacterRange.test(content))\n    return content;\n\n  if (!to) {\n    if (!globalOptions.isSilentMode()) console.error('Convert target font must be specified on knayi.fontConvert.');\n    return content;\n  }\n\n  content = content.trim().replace(/\\u200B/g, '');\n  to = fontTypes[to];\n  from = fontTypes[from];\n\n  if (!to) {\n    if (!globalOptions.isSilentMode()) console.error('Convert library dosen\\'t have this fontType.')\n    return content;\n  } else if (!from) {\n    from = fontDetect(content);\n  }\n\n  if (to === from) {\n    return content;\n  }\n\n  var debug_logs = {\n    to: to, from: from,\n    matched_patterns: [],\n    steps: []\n  }\n\n  content = spellingFix(content, from);\n  var refLib = library.convert[from][to];\n\n  for (var i = 0; i < refLib.oneTime.length; i++) {\n    var rule1 = refLib.oneTime[i];\n    // debugging\n    if (this.debug && rule1[0].test(content)) {\n      debug_logs.matched_patterns.push(rule1);\n      debug_logs.steps.push(content);\n    }\n    content = content.replace(rule1[0], rule1[1]);\n  }\n\n  for (var j = 0; j < refLib.asLongAsMatch.length; j++) {\n    var rule2 = refLib.asLongAsMatch[j];\n    // debugging\n    if (this.debug && rule2[0].test(content)) {\n      debug_logs.matched_patterns.push(rule2);\n      debug_logs.steps.push(content);\n    }\n    while (rule2[0].test(content)) {\n      content = content.replace(rule2[0], rule2[1]);\n    }\n  }\n\n  if (this.debug) {\n    // final\n    debug_logs.steps.push(content);\n    return debug_logs;\n  }\n\n  return content;\n};\n\nfontConvert.debugging = function (param1, param2, param3) {\n  return fontConvert.apply({debug: true}, [param1, param2, param3])\n}\n\n\nmodule.exports = fontConvert;\n","const fontDetect = require('./detector');\nconst syllBreak = require('./syllBreak');\nconst globalOptions = require('./globalOptions');\n\nconst mmCharacterRange = /[\\u1000-\\u109F]/;\n\nfunction truncate(content, options) {\n  options = options || {};\n  var fontType = options.fontType;\n  var length = options.length || 30;\n  var omission = options.omission || '...';\n  \n  var absoulteLength = length - omission.length;\n\n  if (content === '' || !mmCharacterRange.test(content))\n    return content.substr(0, absoulteLength) + omission;\n\n  if (!fontType)\n    fontType = fontDetect(content);\n\n  var syllables = syllBreak(content, fontType).split(/\\u200B/);\n\n  return syllables.reduce(function (curr, syll) {\n    var left = absoulteLength - curr.length;\n    if (left > 0) {\n      if (syll.length <= left) {\n        curr += syll;\n      } else {\n        var spaceBreak = syll.split(/\\s/);\n        \n        curr += spaceBreak.reduce(function (_curr, word) {\n          if (word.length + 1 <= left - _curr.length) {\n            _curr += word + ' ';\n          }\n          return _curr;\n        }, '')\n      }\n    }\n    return curr;\n  }, '').trim() + omission;\n}\n\nmodule.exports = truncate;\n","const globalOptions = require('./globalOptions');\n\nconst _M = 'ျ ြ ွ ှ';\nconst _V = 'ါ ာ ိ ီ ု ူ ေ ဲ';\nconst _S = '္';\nconst _A = '်';\nconst _F = 'ံ ့ း';\nconst _I = 'ဤ ဧ ဪ ၌ ၍ ၏';\nconst _E = 'ဣ ဥ ဦ ဩ ၎';\nconst _G = 'ဿ';\nconst _D = '၀ ၁ ၂ ၃ ၄ ၅ ၆ ၇ ၈ ၉';\nconst _P = '၊ ။';\n\nfunction removeSpace(content) {\n  return content.replace(/\\s/g, '');\n}\n\n/** Syllable base reordering */\nconst BURMESE = 'က-ဧဩ';\n\nconst C = 'က-အ';\nconst LONG_C = 'ကဃဆဏတထဘအယလသဟ';\nconst SHORT_C = 'ခဂငစဇဈဉဎဒဓနပဖဗမရဝဠ';\n// Medials\nconst M = removeSpace(_M);\n// Dependent Vowel Signs\nconst V = removeSpace(_V);\n// Sign Virama\nconst S = removeSpace(_S);\n// Sign Asat\nconst A = removeSpace(_A);\n// Dependent Various Signs\nconst F = removeSpace(_F);\n// Independent Vowels, Various Signs \nconst I = removeSpace(_I);\n// Independent Vowels\nconst E = removeSpace(_E);\n// THA GYI \nconst G = removeSpace(_G);\n// Digits\nconst D = removeSpace(_D);\n// Punctuation Marks\nconst P = removeSpace(_P);\n// ZERO\nconst ZERO = '၀';\n\nconst REGEX_BURMESE = new RegExp(`[${BURMESE}]`);\n\n// Brake point used to reorder\nconst brakePoint = `([${C}${E}${ZERO}])([${M}${V}${A}${F}]+)`;\nconst brakePointRegex = new RegExp(brakePoint, 'gm');\n\n/** Extended rules */\nlet extendedRules = [];\nlet postExtendedRules = [];\nfunction addReplacementRule(rulesset, [pattern, replacement]) {\n  rulesset.push([new RegExp(pattern, 'gm'), replacement]);\n}\n\nconst ZERO_WA = '၀ ဝ';                // Zero to Wa lone\nconst U_FIX = 'ဦ ဦ';                  // U\nconst AWL = 'ဩော် ဪ';               // Awl\n// Debatable \nconst DOUBLE_LONE_GYI_TIN = 'ိီ ီ';\nconst DOUBLE_TA_CHAUNG_NGIN = 'ုူ ူ';\nconst ZA_MYIN_ZWAE = 'စျ ဈ';\n\n// Post fix rule\nconst SPACE_IN_FRONT_OF_VIRAMA = `([${SHORT_C}])\\\\s(္[က-အ]) $1$2`;\n\naddReplacementRule(extendedRules, ZERO_WA.split(' '));\naddReplacementRule(extendedRules, U_FIX.split(' '));\naddReplacementRule(extendedRules, AWL.split(' '));\naddReplacementRule(extendedRules, DOUBLE_LONE_GYI_TIN.split(' '));\naddReplacementRule(extendedRules, DOUBLE_TA_CHAUNG_NGIN.split(' '));\naddReplacementRule(extendedRules, ZA_MYIN_ZWAE.split(' '));\n\naddReplacementRule(postExtendedRules, SPACE_IN_FRONT_OF_VIRAMA.split(' '));\n\n/** Extended rules */\nconst rankingMap = {\n  // M\n  'ျ': 1,\n  'ြ': 2,\n  'ွ': 3,\n  'ှ': 4,\n  // V \n  'ေ': 5,\n  'ါ': 6,\n  'ာ': 7,\n  'ိ': 8,\n  'ီ': 9,\n  'ု': 10,\n  'ူ': 11,\n  'ဲ': 12,\n  // A\n  '်': 13,\n  // F\n  'ံ': 14,\n  '့': 15,\n  'း': 16,\n};\n\n// Remove duplicated\nfunction uniquify(array) {\n  return [...(new Set(array))];\n}\n\n// Apply replecement rules\nfunction applyReplacementRules(rulesset, content) {\n  return rulesset.reduce((a,b) => {\n    return a.replace(b[0], b[1]);\n  }, content);\n}\n\n/**\n * Normalization basically do transforming text into a single canonical form \n * @param {String} content Context to normalize\n */\nfunction normalize(content) {\n  if (!content) {\n    if (!globalOptions.isSilentMode()) console.warn('Content must be specified on knayi.normalize.');\n    return '';\n  }\n\n  const result = content\n    .replace(/\\u200B/g, '')\n    .replace(brakePointRegex, (m, g1, g2) => {\n      let chunk = g1 || '';\n\n      // Re-ordering\n      uniquify(g2)\n        .sort((a,b) => rankingMap[a] - rankingMap[b])\n        .forEach((v) => chunk += v);\n     \n      return applyReplacementRules(extendedRules, chunk);\n    });\n  \n  return applyReplacementRules(postExtendedRules, result);\n}\n\nmodule.exports = normalize;"],"sourceRoot":""}